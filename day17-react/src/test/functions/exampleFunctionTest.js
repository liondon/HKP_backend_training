/* eslint-env mocha */
'use strict'

// tests for exampleFunction
// Generated by serverless-mocha-plugin

const mochaPlugin = require('serverless-mocha-plugin')
const dirtyChai = require('dirty-chai')
mochaPlugin.chai.use(dirtyChai)
const expect = mochaPlugin.chai.expect
let wrapped = mochaPlugin.getWrapper('exampleFunction', '../../../src/functions/exampleFunction.js', 'exampleFunction')
let AWS = require('aws-sdk-mock')
let AWS_SDK = require('aws-sdk')
AWS.setSDKInstance(AWS_SDK)

describe('exampleFunction', () => {
  before((done) => {
    done()
  })

  it('implement tests here', () => {
    // a mock to catch any call to S3's putObject API call 
    AWS.mock('S3', 'putOnject', (params) => {
      return new Promise((resolve, reject) => {
        if (true) {
          resolve({})
        } else {
          reject(new Error('Some error here!'))
        }
      })
    })

    return wrapped.run({
      body: JSON.stringify({
        parameter: 'value'
      })
    }).then((response) => {
      expect(response).to.not.be.empty()
    })
  })
})
